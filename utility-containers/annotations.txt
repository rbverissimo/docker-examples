by running the command below, I'm building up from a base node image to full blown node app binding mouting the container into the host filesystem. 
docker run -it -v C:\Users\User\Desktop\sts-420\docker-course\utility-containers\node-uc:/app node-util npm init

ENTRYPOINT 

it works like a restriction to the container. it must take an argument of the specified entry point. in the example, the entry point is the npm. then, while docker running 
the container I must pass on what I need to ben ran. 

docker run -it -v C:\Users\User\Desktop\sts-420\docker-course\utility-containers\node-uc:/app node-util <command-here>


DOCKER COMPOSE

so, I wrote a docker-compose.yaml. it is on this very folder. the point of that docker compose is to simplify my life as a developer. 
so, instead of running a container full of commands, imma about doing: docker compose run --rm <commands>
as it means that i can do something in the lines of docker compose run --rm npm init that it would create a node project for me. simple as that. 

docker compose run is a bit different of docker compose up. that's why i'm passing the --rm flag, so that it removes the container after the execution. 
otherwise it wouldn't do so. 